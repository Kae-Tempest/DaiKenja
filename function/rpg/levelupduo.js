const {levelingduo } = require('./leveling');

const levelup = async (client, message, player, player2, user) => {
    //Aumentation des niveaux
    levelingduo(client, message, player, player2, user)

    function get_vita(lvl) {
        const vita = [0, 0, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500, 5, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500, 5, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500, 5, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500, 5, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500, 5, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500, 5, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500, 5, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500, 5, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500, 5, 5, 3, 6, 8, 3, 4, 3, 6, 10, 2, 8, 2, 5, 4, 5, 2, 6, 5, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 25, 4, 8, 2, 5, 3, 6, 8, 3, 4, 10, 6, 4, 3, 8, 2, 5, 4, 5, 2, 10, 5, 4, 8, 5, 4, 5, 4, 9, 3, 10, 3, 6, 8, 2, 5, 2, 2, 3, 5, 10, 8, 2, 6, 2, 8, 5, 5, 4, 5, 500]
        let leveling_vita = vita[lvl]
        return new_vita = leveling_vita;
    }

    function get_consti(lvl) {
        const consti = [0, 0, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500, 2, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500, 2, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500, 2, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500, 2, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500, 2, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500, 2, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500, 2, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500, 2, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500, 2, 2, 5, 3, 2, 6, 8, 7, 3, 10, 5, 4, 5, 1, 8, 1, 5, 3, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 25, 6, 4, 1, 2, 5, 3, 2, 6, 8, 10, 3, 2, 7, 4, 5, 1, 8, 1, 5, 10, 7, 3, 5, 8, 5, 3, 2, 2, 8, 10, 4, 3, 5, 6, 2, 5, 6, 8, 2, 10, 3, 4, 1, 5, 2, 4, 8, 3, 8, 500]
        let leveling_consti = consti[lvl]
        return new_consti = leveling_consti;
    }

    function get_strength(lvl) {
        const force = [0, 0, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500]
        let leveling_force = force[lvl]
        return new_force = leveling_force;
    }

    function get_agility(lvl) {
        const agi = [0, 0, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250]
        let leveling_agi = agi[lvl]
        return new_agi = leveling_agi;
    }

    function get_intelligence(lvl) {
        const intel = [0, 0, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250, 1, 1, 3, 2, 3, 1, 2, 1, 3, 5, 4, 1, 2, 4, 1, 4, 2, 3, 2, 5, 2, 2, 1, 1, 4, 1, 3, 3, 2, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 2, 2, 4, 1, 4, 1, 2, 2, 13, 1, 2, 3, 1, 3, 2, 3, 1, 2, 5, 2, 4, 1, 2, 2, 5, 1, 4, 2, 5, 1, 3, 1, 1, 4, 1, 2, 2, 3, 5, 3, 2, 2, 4, 2, 3, 2, 2, 1, 5, 3, 3, 2, 4, 1, 4, 1, 2, 2, 250]
        let leveling_intel = intel[lvl]
        return new_intel = leveling_intel;
    }

    function get_spirit(lvl) {
        const spirit = [0, 0, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500, 3, 3, 5, 4, 6, 2, 4, 2, 5, 10, 5, 3, 5, 9, 2, 8, 4, 5, 5, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 25, 2, 3, 6, 3, 5, 4, 6, 2, 4, 10, 5, 8, 2, 3, 5, 9, 2, 8, 4, 10, 3, 5, 2, 3, 8, 2, 6, 5, 5, 10, 6, 5, 3, 8, 4, 6, 4, 5, 2, 10, 5, 6, 4, 8, 2, 8, 2, 5, 4, 500]
        let leveling_spirit = spirit[lvl]
        return new_spirit = leveling_spirit;
    }

    function lvlstats(lvl) {
        if (lvl === 1000) {
            return message.reply("Tu es level max !");
        }
        if (player.level === lvl) {
            client.updateUserInfo(message.member, {
                "users.$.stats.vitality": player.stats.vitality += get_vita(lvl),
                "users.$.statsMax.vitality": player.stats.vitality += get_vita(lvl),
                "users.$.stats.constitution": player.stats.constitution += get_consti(lvl),
                "users.$.stats.strength": player.stats.strength += get_strength(lvl),
                "users.$.stats.agility": player.stats.agility += get_agility(lvl),
                "users.$.stats.intelligence": player.stats.intelligence += get_intelligence(lvl),
                "users.$.stats.spirit": player.stats.spirit += get_spirit(lvl),
            });
            client.updateUserInfo(user, {
                "users.$.stats.vitality": player2.stats.vitality += get_vita(lvl),
                "users.$.statsMax.vitality": player2.stats.vitality += get_vita(lvl),
                "users.$.stats.constitution": player2.stats.constitution += get_consti(lvl),
                "users.$.stats.strength": player2.stats.strength += get_strength(lvl),
                "users.$.stats.agility": player2.stats.agility += get_agility(lvl),
                "users.$.stats.intelligence": player2.stats.intelligence += get_intelligence(lvl),
                "users.$.stats.spirit": player2.stats.spirit += get_spirit(lvl),
            });
        }
    }
    lvlstats(player.level);
}


const isWhithin = (player, min, max) => {
    if (min <= 0) {
        if (player.level <= max) return true;
    } else {
        if (min < player.level && player.level <= max) return true;
    }
    return false
}

const prestigeForest = (player, factor) => {
    if (player.experience < player.level * factor - 1) return true;
    if (player.prestige === 1 && player.experience < player.level * player.prestige * 10 * factor - 1) return true;
    if (player.prestige === 2 && player.experience < player.level * player.prestige * 50 * factor - 1) return true;
    if (player.prestige === 3 && player.experience < player.level * player.prestige * 200 * factor - 1) return true;
    if (player.prestige === 4 && player.experience < player.level * player.prestige * 150 * factor - 1) return true;
    if (player.prestige === 5 && player.experience < player.level * player.prestige * 200 * factor - 1) return true;
    if (player.prestige === 6 && player.experience < player.level * player.prestige * 250 * factor - 1) return true;
    if (player.prestige === 7 && player.experience < player.level * player.prestige * 300 * factor - 1) return true;
    if (player.prestige === 8 && player.experience < player.level * player.prestige * 350 * factor - 1) return true;
    if (player.prestige === 9 && player.experience < player.level * player.prestige * 400 * factor - 1) return true;
    if (player.prestige === 10 && player.experience < player.level * player.prestige * 500 * factor - 1) return true;
    return false
}

module.exports = {
    levelup,
    isWhithin,
    prestigeForest
}